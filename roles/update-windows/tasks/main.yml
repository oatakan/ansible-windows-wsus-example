---
- block:
    - name: check for missing updates
      win_updates:
        category_names: "{{ win_update_category_names }}"
        state: searched
      register: available_updates

    - debug:
        msg: |
          {{ inventory_hostname }} has {{ available_updates.found_update_count }} updates available.
          {% for update in updates %}
            - {{ update.title }}
          {% endfor %}
      vars:
        updates: "{{ (available_updates.updates.values() | list) if (available_updates.updates is mapping) else (available_updates.updates) }}"
      when: available_updates.updates is defined

    - debug:
        var: available_updates

    - name: install all windows updates
      win_updates:
        category_names: "{{ win_update_category_names }}"
        reject_list: "{{ win_update_blacklist | default(omit) }}"
        accept_list: "{{ win_update_whitelist | default(omit) }}"
        reboot: true
      register: installed_updates
      when: available_updates.found_update_count|int >= 1

  rescue:
    - name: reboot before continue to retry
      win_reboot:

    - name: install all windows updates (retry)
      win_updates:
        category_names: "{{ win_update_category_names }}"
        reject_list: "{{ win_update_blacklist | default(omit) }}"
        accept_list: "{{ win_update_whitelist | default(omit) }}"
        reboot: true
      register: installed_updates_retry

  always:
    - name: check for missing updates.
      win_updates:
        state: searched
      register: available_updates

    - name: list missing updates
      debug:
        var: available_updates

    - name: report on installed updates
      debug:
        msg: |
          Host {{ inventory_hostname }} has been patched and rebooted. {{ installed_updates.installed_update_count | default('0') }} updates were installed. The updates installed were:

          {% for update in updates %}
            - {{ update.title }}
          {% endfor %}
          {{ installed_updates.failed_update_count | default('0') }} updates failed to install."
      vars:
        updates: "{{ (installed_updates.updates.values() | list) if (installed_updates.updates is mapping) else (installed_updates.updates) }}"
      when: installed_updates.updates is defined
